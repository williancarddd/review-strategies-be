datasource db {
  provider = "postgresql" // Ou o banco que você está usando
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String @id @default(cuid())
  username  String @unique
  name      String
  email     String @unique
  password  String
  objective String

  payments    Payment[]
  studyThemes StudyTheme[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id          String      @id @default(cuid())
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  amount      Float
  paymentType PaymentType // Enum: 'PIX', 'CARD'

  status PaymentStatus // Enum: 'PENDING', 'COMPLETED', 'FAILED'

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StudyTheme {
  id         String      @id @default(cuid())
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  title      String
  mode       String
  startDate  DateTime // Data inicial do tema de estudo
  studyDates StudyDate[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StudyDate {
  id           String      @id @default(cuid())
  studyTheme   StudyTheme  @relation(fields: [studyThemeId], references: [id], onDelete: Cascade)
  studyThemeId String
  studyDate    DateTime
  status       StudyStatus // Enum: 'PENDING', 'COMPLETED', 'SKIPPED'

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum StudyStatus {
  PENDING
  COMPLETED
  SKIPPED
}

enum PaymentType {
  PIX
  CARD
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}
